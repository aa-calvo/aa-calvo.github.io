import{_ as i,c as o,a0 as a,o as l}from"./chunks/framework.p2VkXzrt.js";const m=JSON.parse('{"title":"Akros Drone","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),t={name:"index.md"};function n(r,e,s,u,h,c){return l(),o("div",null,e[0]||(e[0]=[a('<h1 id="akros-drone" tabindex="-1">Akros Drone <a class="header-anchor" href="#akros-drone" aria-label="Permalink to &quot;Akros Drone&quot;">​</a></h1><h2 id="goals" tabindex="-1">Goals <a class="header-anchor" href="#goals" aria-label="Permalink to &quot;Goals&quot;">​</a></h2><p>The primary objective of this project is <strong>learning!</strong> This means that I may &quot;reinvent the wheel&quot; sometimes. The decision to build my own simulator in C++ is the main example of this.</p><p>The secondary objectives are driven by personal curiosity and career development. These will drive some of the design decisions but should not lead to large deviations from the primary objectives.</p><p>Primary Learning Objectives:</p><ul><li>Analytical Dynamics <ul><li>Equations of Motion</li><li>Coordinate Transformations</li></ul></li><li>Control Theory <ul><li>Basic PID control</li><li>Gain Margins</li></ul></li><li>Robot Geometry <ul><li>Quaternions</li></ul></li></ul><p>Secondary Learning Objectives:</p><ul><li>Unreal Engine</li><li>Real-Time Linux (PREEMPT_RT)</li><li>Machine Learning <ul><li>Object detection</li><li>Reinforcement learning</li></ul></li></ul><h2 id="autonomy" tabindex="-1">Autonomy <a class="header-anchor" href="#autonomy" aria-label="Permalink to &quot;Autonomy&quot;">​</a></h2><p>Machine learning is a secondary objective; therefore, I will keep the first autonomy milestones as simple as possible. This means focusing more on the &quot;hard maths&quot; instead of trying to use ML/RL to magically complete the goal.</p><h2 id="milestones" tabindex="-1">Milestones <a class="header-anchor" href="#milestones" aria-label="Permalink to &quot;Milestones&quot;">​</a></h2><ol><li>First Flight (Gazebo) <ul><li>Use Gazebo simulation environment to test basic take-off and landing</li></ul></li><li>First Flight (Real) <ul><li>Make sure the chosen hardware and software stack actually work</li></ul></li><li>First Flight (Akros Sim) <ul><li>Develop custom flight simulator</li></ul></li></ol>',12)]))}const p=i(t,[["render",n]]);export{m as __pageData,p as default};
